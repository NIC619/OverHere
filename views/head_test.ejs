<meta charset="UTF-8">
<title><%= title %></title>
<link rel='stylesheet' href='/stylesheets/bootstrap.css' />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<style type="text/css">
      html, body, #map-canvas { height: 100%; margin: 0; padding: 0;}
</style>
<script type="text/javascript">
    var map;
    //var locInfoBundleList = [];
    
    function attachInfoWindow(marker, locationInfo) {
        var photoHtml = '<div>';
        for (var i in locationInfo.photoIDs){
            photoHtml += "<img src='/gallery/" + locationInfo.photoIDs[i] + "' \
            height='150' width='150' alt='Fail loading image...'>";
        }
        /*
        因為express已經設定static目錄為public，所以要取用gallery裡的照片不需再指定public如src='/public/gallery/xxx'
        */

        var infowindow = new google.maps.InfoWindow({
            content:    "Contributors: <b>" + locationInfo.name + "</b><br>\
                        <b>Lat</b>: " + marker.get('position').lat() + ", <b>Lng</b>: " + marker.getPosition().lng() + "<br>"
                        + photoHtml + "</div><div><button onclick='deleteMarker()'>Do Sth</button></div>"
        });
        marker.addListener('click',function(){
            infowindow.open(marker.get('map'), marker);
        });
        marker.addListener('dblclick',function(){
            infowindow.close();
        });
    }

   	function loadMarkers() {
  		var xhttp = new XMLHttpRequest();
  		xhttp.onreadystatechange = function() {
    		if (xhttp.readyState == 4 && xhttp.status == 200) {
     			var location_list = JSON.parse(xhttp.responseText);
     			for(i in location_list){
		        	//console.log(location_list[i]);
		        	var marker = new google.maps.Marker({
		        		position: new google.maps.LatLng(location_list[i].lat, location_list[i].lng),
		        		map: map,
		        		title: location_list[i].title
		        	});
                    attachInfoWindow(marker, location_list[i]);
                    //var locInfoBundle = { local: marker, db: location_list[i]};
                    //console.log(locInfoBundle);
                    //locInfoBundleList.push(locInfoBundle);
        		}
    		}
  		};
  		xhttp.open("GET", "http://localhost:14741/ajax", true);
  		xhttp.send();
	}
    
    function clickMap(location) {
        var marker = new google.maps.Marker({
            position: location,
            map: map,
            title: "stage1"
        });
        
        var infoWindowContent = "<form id='formAddMarker' action='/newLocation' method='POST' accept-charset='utf-8' enctype='multipart/form-data'>\
            <b>Title</b>: <input type='text' name='title' size='10'><br>\
            <b>Lat</b>: " + marker.get('position').lat() + "<input type='hidden' name='lat' value='" + marker.get('position').lat() + "'  > , \
            <b>Lng</b>: " + marker.getPosition().lng() + "<input type='hidden' name='lng' value='" + marker.getPosition().lng() + "' ><br>\
            <b>Name</b>: <input type='text' id='name' name='name'><br>\
            <input type='file' name='img' accept='image/*' multiple><br>\
            <input type='button' id='button' value='Add' onclick='addMarker(this.form)' /></form>";
    
        var infowindow = new google.maps.InfoWindow({
            content: infoWindowContent
        });
        infowindow.open(map, marker);
        marker.addListener('click',function(){
            infowindow.close();
            marker.setMap(null);
        });
        
    }

    function addMarker(thisForm) {
        var formAddMarker = $(thisForm);
        var newf = new FormData();
        newf.append('lat', formAddMarker.find('input[name="lat"]').val());
        newf.append('lng', formAddMarker.find('input[name="lng"]').val());
        newf.append('name', formAddMarker.find('input[name="name"]').val());
        newf.append('title', formAddMarker.find('input[name="title"]').val());
        //console.log(formAddMarker.find('input[type="file"]')[0].files);
        for (var i = 0; i < formAddMarker.find('input[type="file"]')[0].files.length; i++) {
            newf.append('img', formAddMarker.find('input[type="file"]')[0].files[i]);
            console.log(formAddMarker.find('input[type="file"]')[0].files[i]);
        }
        
        /*  一開始遇到的問題轉FormData，但是thisForm不是一個standard javascript object
            導致FormData內容錯誤讓伺服器端讀不到值。
            改用append之後，卻沒發現img的value是formAddMarker.find('input[name="img"]').val()，
            只是一個單純的路徑，導致伺服器無法解析成檔案。
            後來改成formAddMarker.find('input[type="file"]')[0].files[0])，這才是一個file的object
        */
        
        $.ajax({
            type:   formAddMarker.attr('method'),
            url:    formAddMarker.attr('action'),
            cache: false,
            contentType: false,
            processData: false,
            data:   newf,
            success: function (res) {
                formAddMarker.find('#button').val('Success!');
                loadMarkers();
            }
        });
    }

    function initialize() {
        // Create a map object, and include the MapTypeId to add
        // to the map type control.
        var mapOptions = {
          center: { lat: 25.0193162, lng: 121.5414898},
          zoom: 8,
          mapTypeControlOptions: {
            mapTypeIds: [google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.HYBRID]    //, 'map_style']
          }
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        
        // Try HTML5 geolocation.
    		if (navigator.geolocation) {
      		navigator.geolocation.getCurrentPosition(function(position) {
      			//console.log(position);
  	      		var pos = {
  			        lat: position.coords.latitude,
  			        lng: position.coords.longitude
  	     		};
  		      	map.setCenter(pos);
  		    });
      		//}, function() {
        	//	handleLocationError(true, infoWindow, map.getCenter());
      		//});
    		} else {
      		// Browser doesn't support Geolocation
      		console.log('Browser doesn\'t support Geolocation');
      		//handleLocationError(false, infoWindow, map.getCenter());
   		  }

		loadMarkers();
        // This event listener will call clickMap() when the map is clicked.
        map.addListener('click', function(event) {
            //console.log(event);
            clickMap(event.latLng);
        });

    }

      
</script>
<script async defer
	src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBOugomkLdBEVv4wOb23mirFw8cTG_wz4o&callback=initialize">
</script>